[{"/Users/vaishali.singh/Desktop/Vaishali Singh/ettttt/Placement 2020/Company Applied/LeadSquare/shopping-cart/src/App.js":"1","/Users/vaishali.singh/Desktop/Vaishali Singh/ettttt/Placement 2020/Company Applied/LeadSquare/shopping-cart/src/reportWebVitals.js":"2","/Users/vaishali.singh/Desktop/Vaishali Singh/ettttt/Placement 2020/Company Applied/LeadSquare/shopping-cart/src/index.js":"3"},{"size":5435,"mtime":1611566393154,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1611423819384,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1611423819382,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"1etgcyb",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/vaishali.singh/Desktop/Vaishali Singh/ettttt/Placement 2020/Company Applied/LeadSquare/shopping-cart/src/App.js",["15","16"],"import cart from './cart.png';\nimport './AppScss.scss';\nimport React,{Component} from 'react';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state={\n       productList:[],\n       isDialogOpen:false,\n       cartList:[],\n       cartMap:new Map()\n    }\n    this.handleAddToCart=this.handleAddToCart.bind(this);\n    this.handleRemoveCart=this.handleRemoveCart.bind(this);\n  }\n  /**\n   * function to handle the dialog open close functionality\n   */\n  handleDialogOpen=(event)=>{\n    if(event){\n      if(this.state.isDialogOpen){\n        this.setState({isDialogOpen:false});\n      }else{\n        this.setState({isDialogOpen:true});\n      }\n    }\n  }\n  /**\n   * function to add the items in the cart and remove the\n   * @param {*} event \n   * @param {*} elemement \n   */\n  handleAddToCart(event,elemement){\n    if(event){\n       let index=event.currentTarget.id;\n       let quantity=this.state.productList[index].quantity;\n       let newQuant=quantity-1;\n\n       let productListCopy=JSON.parse(JSON.stringify(this.state.productList));\n       productListCopy[index].quantity=newQuant;\n        let cartMapcopy=this.state.cartMap;\n        cartMapcopy.set(index,productListCopy[index]);\n        this.setState({cartMap:cartMapcopy});\n        console.log(this.state.cartMap);\n       this.setState({productList:productListCopy});\n       \n    }\n  }\n  /**\n   * function to render the cart\n   */\n  handleCartRender(){\n    if(this.state.isDialogOpen){\n      const self=this;\n      return (\n        <div className=\"dialogBox\">\n          <div className=\"dialog-header\">\n            <div> Cart Items</div>\n            <div className=\"close\" onClick={(event)=> this.handleDialogOpen(event)}>close</div>\n          </div>\n          <div className=\"dialog-items\">\n            <ul className=\"catItemList\">\n              {(this.state.cartMap.size>0)?this.renderCartList(this.state.cartMap,self):<div>No Items Are Added to Cart</div>}\n            </ul>\n          </div> \n        </div>\n      );\n    }\n  }\n  /**\n   * function to handle the functionality the remove the items form the cart\n   */\n  handleRemoveCart(event){\n    if(event){\n      let index=event.currentTarget.id;\n      /**\n       * cart update\n       */\n      let cartMapcopy=this.state.cartMap;\n      cartMapcopy.delete(index+\"\"); \n      this.setState({cartMap:cartMapcopy});\n\n      /**\n       * product list update\n       */\n      let quantity=this.state.productList[index].quantity;\n      let newQuant=quantity+1;\n\n      let productListCopy=JSON.parse(JSON.stringify(this.state.productList));\n      productListCopy[index].quantity=newQuant;\n      this.setState({productList:productListCopy});\n    }\n\n  }\n  /**\n   * function to render the card elements\n   * @param {*} maplist \n   * @param {*} self \n   */\n  renderCartList(maplist,self){\n   return [...maplist.keys()].map(function (key){\n      var entry = maplist.get(key);\n      return(\n        <li className=\"listItem\">\n        <div class=\"card\">\n          <img src={entry.image} alt=\"Avatar\"  />\n          <div className=\"container\">\n            <h4>\n              <b>Price: {entry.price}</b>\n            </h4>\n            <p>{entry.description}</p>\n          </div>\n          <div className=\"cartButton\">\n            <button onClick={self.handleRemoveCart} id={parseInt(key)}>Remove</button>\n          </div>\n        </div>\n      </li>\n      );\n    }\n    )\n  }\n  /**\n   * life cycle method in react\n   */\n  componentDidMount(){\n    fetch(`https://run.mocky.io/v3/aea5d98a-654d-4423-bd99-6fbb90843730`)\n    .then(response=>response.json())\n    .then(data=>{this.setState({productList:data.data})\n        console.log(this.state.productList);\n    })\n    .catch(error=>console.log(error));\n  }\n  /**\n   * function to render the product list\n   */\n  renderProductList=()=>{\n    if(this.state.productList.length>0){\n      return this.state.productList.map((item,index)=>{\n        return(\n        <li className=\"listItem\">\n           <div class=\"card\">\n              <img src={item.image} alt=\"Avatar\"  />\n              <div className=\"container\">\n                <h4>\n                  <b>Price: {item.price}</b>\n                </h4>\n                <h4>\n                <b>Quantity: {item.quantity}</b>\n                </h4>\n                <p>{item.description}</p>\n              </div>\n             <div className=\"cartButton\">\n             {(item.quantity>0)?\n               <button onClick={(event)=>{this.handleAddToCart(event)}} id={index}>Add To Cart</button>\n               : <button onClick={(event)=>{this.handleAddToCart(event)}} id={index} disabled>Add To Cart</button>}\n             </div>\n            </div>\n         </li>\n        );\n      })\n    }\n\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <div className=\"shoppingSite\">\n          <div className=\"headerTitle\">Shopping Site</div>\n          <div className=\"cartImage\"> <img src={cart} onClick={(event)=> this.handleDialogOpen(event)} /></div>\n        </div>\n        <div className=\"productList\">\n          <ul className=\"unorderedList\">\n             {this.state.productList.length>0?this.renderProductList():<div>No results Foud</div>}\n          </ul>\n        </div>\n        <div  className=\"footer\">\n            Shopping.Cart.Com\n        </div>\n        {(this.state.isDialogOpen)?\n        <dialog open className=\"dialog\">\n             {this.handleCartRender()}\n        </dialog>:\"\"}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/vaishali.singh/Desktop/Vaishali Singh/ettttt/Placement 2020/Company Applied/LeadSquare/shopping-cart/src/reportWebVitals.js",[],"/Users/vaishali.singh/Desktop/Vaishali Singh/ettttt/Placement 2020/Company Applied/LeadSquare/shopping-cart/src/index.js",[],{"ruleId":"17","severity":1,"message":"18","line":3,"column":15,"nodeType":"19","messageId":"20","endLine":3,"endColumn":24},{"ruleId":"21","severity":1,"message":"22","line":170,"column":39,"nodeType":"23","endLine":170,"endColumn":106},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]